{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/pages/Param.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","console","log","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","prototype","PropTypes","string","isRequired","func","defaultProps","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updatedContact","match","params","put","Header","branding","href","protoType","About","version","NotFound","Param","Test","title","completed","fetch","then","response","json","toString","App","context_Provider","layout_Header","react_router","exact","path","component","contacts_AddContact","contacts_Contacts","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.838e2fd5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n\r\n  // Directly use the response within axios call\r\n  // componentDidMount() {\r\n  //   console.log(\"componentDidMount!!\");\r\n\r\n  //   axios.get(\"https://jsonplaceholder.typicode.com/users\").then(res =>\r\n  //     this.setState({\r\n  //       contacts: res.data\r\n  //     })\r\n  //   );\r\n  // }\r\n\r\n  //Assign the response to a variable ... 1st, we need to\r\n  //make it as async & await keywords\r\n  async componentDidMount() {\r\n    console.log(\"componentDidMount!!\");\r\n\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  // Directly use the response within axios call\r\n  // onDeleteClick = (id, dispatch) => {\r\n  //   axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`).then(res =>\r\n  //     dispatch({\r\n  //       type: \"DELETE_CONTACT\",\r\n  //       payload: id\r\n  //     })\r\n  //   );\r\n  // };\r\n\r\n  //Assign the response to a variable ... 1st, we need to\r\n  //make it as async & await keywords... for event, we need to put async differenctly\r\n  onDeleteClick = async (id, dispatch) => {\r\n    // const res = axios.delete(\r\n    //   `https://jsonplaceholder.typicode.com/users/${id}`\r\n    // );\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    dispatch({\r\n      type: \"DELETE_CONTACT\",\r\n      payload: id\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // const { name, email, phone } = this.props;\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">{email}</li>\r\n                  <li className=\"list-group-item\">{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  // name: PropTypes.string.isRequired,\r\n  // email: PropTypes.string.isRequired,\r\n  // phone: PropTypes.string.isRequired\r\n  contact: PropTypes.object.isRequired\r\n  // deleteClickHandler: PropTypes.func.isRequired\r\n};\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\n\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  // deleteContact = id => {\r\n  //   const { contacts } = this.state;\r\n  //   const newContacts = contacts.filter(contact => contact.id !== id);\r\n\r\n  //   this.setState({ contacts: newContacts });\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\"> Contact</span> List\r\n              </h1>\r\n\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nfunction TextInputGroup({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTextInputGroup.prototype = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.func.isRequired\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n//import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  //onChange = e => this.state({ name: e.taraget.value});\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    //Clear the state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      error: {}\r\n    });\r\n\r\n    //after adding the new contact, it re-direct to home page\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n//import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  //onChange = e => this.state({ name: e.taraget.value});\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check for Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updatedContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updatedContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    //Clear the state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      error: {}\r\n    });\r\n\r\n    //after adding the new contact, it re-direct to home page\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" />\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" />\r\n                Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" />\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\n// return (\r\n//   <div>\r\n//     <h1>{branding}</h1>\r\n//   </div>\r\n// );\r\n\r\nHeader.defaultProps = {\r\n  branding: \"Contact Manager\"\r\n};\r\n\r\nHeader.protoType = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\n//<h1 style=headerStyple>{branding}</h1>\r\n// const headerStyple = {\r\n//   color: \"red\",\r\n//   fontSize: \"50px\"\r\n// };\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"display-6\">About Contact Manager</h1>\r\n        <p className=\"lead\">Simple app to manage contacts</p>\r\n        <p className=\"text-secondary\">1.0.0</p>\r\n        <p>React Version: {React.version}</p>\r\n        <p>Created by: Kelvin F (61920)</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"> 404 Page Not Found</h1>\r\n      <p className=\"lead\">Sorry, that page is not exist</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default props => {\r\n  return <div>Passing params: {props.match.params.id}</div>;\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    completed: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount!!\");\r\n\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          completed: data.completed\r\n        })\r\n      )\r\n      .then(data => console.log(this.state));\r\n  }\r\n\r\n  componentWillMount() {\r\n    console.log(\"component Will Mount!!\");\r\n  }\r\n\r\n  componentWillUpdate() {\r\n    console.log(\"component Will Mount!!\");\r\n  }\r\n\r\n  render() {\r\n    const { title, completed } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Test Component</h1>\r\n        <p>Title: {title}</p>\r\n        <p>Completed: {completed.toString()}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\n\n//BrowserRouter is not working if deploying to github, use HashRouter instead\n//import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Param from \"./components/pages/Param\";\nimport Test from \"./components/test/Test\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"./context\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/param/:id\" component={Param} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n                <AddContact />\n                <Contacts />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}